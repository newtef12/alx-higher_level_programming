/**
 * reverse_list - reverse a linked list
 * @head_ref: pointer to pointer to the head of the list
 * Return: pointer to the new head of the reversed list
 */
listint_t *reverse_list(listint_t **head_ref)
{
    listint_t *prev = NULL;
    listint_t *current = *head_ref;
    listint_t *next = NULL;

    while (current != NULL)
    {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }

    *head_ref = prev;
    return prev;
}

/**
 * compare_lists - compare two linked lists
 * @head1: pointer to the head of the first list
 * @head2: pointer to the head of the second list
 * Return: 1 if lists are equal, else 0
 */
int compare_lists(listint_t *head1, listint_t *head2)
{
    while (head1 != NULL && head2 != NULL)
    {
        if (head1->n != head2->n)
            return 0;
        head1 = head1->next;
        head2 = head2->next;
    }

    // If both lists are NULL at this point, they are equal
    return (head1 == NULL && head2 == NULL);
}
